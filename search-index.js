crystal_doc_search_index_callback({"repository_name":"i18n","body":"# I18n\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Build status](https://img.shields.io/travis/vladfaust/i18n.cr/master.svg?style=flat-square)](https://travis-ci.org/vladfaust/i18n.cr)\n[![API Docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://github.vladfaust.com/i18n.cr)\n[![Releases](https://img.shields.io/github/release/vladfaust/i18n.cr.svg?style=flat-square)](https://github.com/vladfaust/i18n.cr/releases)\n[![Awesome](https://awesome.re/badge-flat2.svg)](https://github.com/veelenga/awesome-crystal)\n[![vladfaust.com](https://img.shields.io/badge/style-.com-lightgrey.svg?longCache=true&style=flat-square&label=vladfaust&colorB=0a83d8)](https://vladfaust.com)\n[![Patrons count](https://img.shields.io/badge/dynamic/json.svg?label=patrons&url=https://www.patreon.com/api/user/11296360&query=$.included[0].attributes.patron_count&style=flat-square&colorB=red&maxAge=86400)](https://www.patreon.com/vladfaust)\n[![Gitter chat](https://img.shields.io/badge/chat%20on-gitter-green.svg?colorB=ED1965&logo=gitter&style=flat-square)](https://gitter.im/vladfaust/Lobby)\n\nInternationalization module for [Crystal](https://crystal-lang.org/).\n\n## Supporters\n\nThanks to all my patrons, I can continue working on beautiful Open Source Software! 🙏\n\n[Lauri Jutila](https://github.com/ljuti), [Alexander Maslov](https://seendex.ru), Dainel Vera\n\n*You can become a patron too in exchange of prioritized support and other perks*\n\n[![Become Patron](https://vladfaust.com/img/patreon-small.svg)](https://www.patreon.com/vladfaust)\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  i18n:\n    github: vladfaust/i18n.cr\n    version: ~> 0.1.1\n```\n\nThis shard follows [Semantic Versioning 2.0.0](https://semver.org/), so see [releases](https://github.com/vladfaust/i18n.cr/releases) and change the `version` accordingly.\n\n## Usage\n\n```yaml\n# es.yml\nes:\n  apples:\n    one: 1 manzana\n    other: \"%{count} manzanas\"\n```\n\n```crystal\nrequire \"i18n\"\nrequire \"i18n/backends/yaml\"\n\nI18n.backend = I18n::Backends::YAML.new.tap do |backend|\n  backend.load_paths << Dir.current + \"/locales\"\n  backend.load\nend\n\nI18n.default_locale # => \"en\"\nI18n.locale = \"es\"\n\nI18n.t(\"apples\", count: 3) # => \"3 manzanas\"\n```\n\nYou can implement your own `I18n::Backend`, as well as your own quantity keys rules (`\"one\"`, `\"many\"` etc.). Read more in docs.\n\n## Development\n\nTests included! Run `crystal spec` while developing.\n\nThere is currently no code for localization currencies, date and time etc. If you need it, please open an issue and/or a pull request.\n\n## Contributing\n\n1. Fork it ( https://github.com/vladfaust/i18n.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [@vladfaust](https://github.com/vladfaust) Vlad Faust - creator, maintainer\n","program":{"html_id":"i18n/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"i18n","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"define_dig?(klass)-macro","html_id":"define_dig?(klass)-macro","name":"define_dig?","doc":null,"summary":null,"abstract":false,"args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"args_string":"(klass)","location":{"filename":"src/ext/dig.cr","line_number":1,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/ext/dig.cr#L1"},"def":{"name":"define_dig?","args":[{"name":"klass","doc":null,"default_value":"","external_name":"klass","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n# Digs deeply into self until found the value by keys.\n\n  \n#\n\n  \n# Returns nil if not found.\n\n  \n#\n\n  \n# NOTE: The *keys* argument **MAY** be **modified** with `#shift` (you may `#dup` or `#clone` it before passing).\n\n  \n#\n\n  \n# ```\n\n  \n# x = \n{\"a\" => \"b\", \"c\" => \n{\"d\" => \"e\"}} # Instance of \n{{ klass.id }}\n\n\n  \n# x.dig?([\"c\", \"d\"]) # => \"e\"\n\n  \n# ```\n\n  def dig?(keys : Array(String))\n    if keys.size == 1\n      return self[keys.first]?\n    \nelse\n      value = self[keys.shift]?\n      value.dig?(keys) if value.is_a?(\n{{ klass.id }}\n)\n    \nend\n  \nend\n\n"}}],"types":[{"html_id":"i18n/Hash","path":"Hash.html","kind":"class","full_name":"Hash(K, V)","name":"Hash","abstract":false,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"i18n/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/ext/dig.cr","line_number":22,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/ext/dig.cr#L22"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"i18n/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"i18n/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Hash` represents a collection of key-value mappings, similar to a dictionary.\n\nMain operations are storing a key-value mapping (`#[]=`) and\nquerying the value associated to a key (`#[]`). Key-value mappings can also be\ndeleted (`#delete`).\nKeys are unique within a hash. When adding a key-value mapping with a key that\nis already in use, the old value will be forgotten.\n\n```\n# Create a new Hash for mapping String to Int32\nhash = Hash(String, Int32).new\nhash[\"one\"] = 1\nhash[\"two\"] = 2\nhash[\"one\"] # => 1\n```\n\n[Hash literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html)\ncan also be used to create a `Hash`:\n\n```\n{\"one\" => 1, \"two\" => 2}\n```\n\nImplementation is based on an open hash table.\nTwo objects refer to the same hash key when their hash value (`Object#hash`)\nis identical and both objects are equal to each other (`Object#==`).\n\nEnumeration follows the order that the corresponding keys were inserted.\n\nNOTE: When using mutable data types as keys, changing the value of a key after\nit was inserted into the `Hash` may lead to undefined behaviour. This can be\nrestored by re-indexing the hash with `#rehash`.","summary":"<p>A <code><a href=\"Hash.html\">Hash</a></code> represents a collection of key-value mappings, similar to a dictionary.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"dig?(keys:Array(String))-instance-method","html_id":"dig?(keys:Array(String))-instance-method","name":"dig?","doc":"Digs deeply into self until found the value by keys.\n\nReturns nil if not found.\n\nNOTE: The *keys* argument **MAY** be **modified** with `#shift` (you may `#dup` or `#clone` it before passing).\n\n```\nx = {\"a\" => \"b\", \"c\" => {\"d\" => \"e\"}} # Instance of Hash\nx.dig?([\"c\", \"d\"]) # => \"e\"\n```","summary":"<p>Digs deeply into self until found the value by keys.</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"args_string":"(keys : Array(String))","args_html":"(keys : Array(String))","location":{"filename":"src/ext/dig.cr","line_number":23,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/ext/dig.cr#L23"},"def":{"name":"dig?","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if keys.size == 1\n  return self[keys.first]?\nelse\n  value = self[keys.shift]?\n  if value.is_a?(Hash)\n    value.dig?(keys)\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n","path":"I18n.html","kind":"module","full_name":"I18n","name":"I18n","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n.cr","line_number":3,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L3"},{"filename":"src/i18n/backend.cr","line_number":5,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L5"},{"filename":"src/i18n/version.cr","line_number":1,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/version.cr#L1"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"available_locales:Array(String)-class-method","html_id":"available_locales:Array(String)-class-method","name":"available_locales","doc":"An array of all available locales. Must be set explicitly.\n\n```\nI18n.available_locales = %w(en es)\n```","summary":"<p>An array of all available locales.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/i18n.cr","line_number":11,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L11"},"def":{"name":"available_locales","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@@available_locales"}},{"id":"available_locales=(available_locales:Array(String))-class-method","html_id":"available_locales=(available_locales:Array(String))-class-method","name":"available_locales=","doc":"An array of all available locales. Must be set explicitly.\n\n```\nI18n.available_locales = %w(en es)\n```","summary":"<p>An array of all available locales.</p>","abstract":false,"args":[{"name":"available_locales","doc":null,"default_value":"","external_name":"available_locales","restriction":"Array(String)"}],"args_string":"(available_locales : Array(String))","args_html":"(available_locales : Array(String))","location":{"filename":"src/i18n.cr","line_number":11,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L11"},"def":{"name":"available_locales=","args":[{"name":"available_locales","doc":null,"default_value":"","external_name":"available_locales","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@available_locales = available_locales"}},{"id":"backend:Backend?-class-method","html_id":"backend:Backend?-class-method","name":"backend","doc":"A current `Backend` used by I18n. Can be changed in a runtime.","summary":"<p>A current <code><a href=\"I18n/Backend.html\">Backend</a></code> used by I18n.</p>","abstract":false,"args":[],"args_string":" : Backend?","args_html":" : <a href=\"I18n/Backend.html\">Backend</a>?","location":{"filename":"src/i18n.cr","line_number":27,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L27"},"def":{"name":"backend","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Backend | ::Nil","visibility":"Public","body":"@@backend"}},{"id":"backend=(backend:Backend?)-class-method","html_id":"backend=(backend:Backend?)-class-method","name":"backend=","doc":"A current `Backend` used by I18n. Can be changed in a runtime.","summary":"<p>A current <code><a href=\"I18n/Backend.html\">Backend</a></code> used by I18n.</p>","abstract":false,"args":[{"name":"backend","doc":null,"default_value":"","external_name":"backend","restriction":"Backend | ::Nil"}],"args_string":"(backend : Backend?)","args_html":"(backend : <a href=\"I18n/Backend.html\">Backend</a>?)","location":{"filename":"src/i18n.cr","line_number":27,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L27"},"def":{"name":"backend=","args":[{"name":"backend","doc":null,"default_value":"","external_name":"backend","restriction":"Backend | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@backend = backend"}},{"id":"default_locale:String-class-method","html_id":"default_locale:String-class-method","name":"default_locale","doc":"Default locale picked when no *locale* is passed to `#translate`.\n\nDefaults to `\"en\"`.","summary":"<p>Default locale picked when no <em>locale</em> is passed to <code><a href=\"I18n.html#translate(keys:Array(String),locale:String?=locale%7C%7Cdefault_locale,count:Int32?=nil):String-instance-method\">#translate</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n.cr","line_number":16,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L16"},"def":{"name":"default_locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@@default_locale"}},{"id":"default_locale=(default_locale:String)-class-method","html_id":"default_locale=(default_locale:String)-class-method","name":"default_locale=","doc":"Default locale picked when no *locale* is passed to `#translate`.\n\nDefaults to `\"en\"`.","summary":"<p>Default locale picked when no <em>locale</em> is passed to <code><a href=\"I18n.html#translate(keys:Array(String),locale:String?=locale%7C%7Cdefault_locale,count:Int32?=nil):String-instance-method\">#translate</a></code>.</p>","abstract":false,"args":[{"name":"default_locale","doc":null,"default_value":"","external_name":"default_locale","restriction":"String"}],"args_string":"(default_locale : String)","args_html":"(default_locale : String)","location":{"filename":"src/i18n.cr","line_number":16,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L16"},"def":{"name":"default_locale=","args":[{"name":"default_locale","doc":null,"default_value":"","external_name":"default_locale","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@default_locale = default_locale"}},{"id":"locale:String?-class-method","html_id":"locale:String?-class-method","name":"locale","doc":"Current locale. The next and ongoing translations will be made with this locale, if not passed explicitly.\n\n```\nI18n.locale = \"es\"\nI18n.t(\"apples\", count: 3) # => \"3 manzanas\"\n```","summary":"<p>Current locale.</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/i18n.cr","line_number":24,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L24"},"def":{"name":"locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@@locale"}},{"id":"locale=(locale:String?)-class-method","html_id":"locale=(locale:String?)-class-method","name":"locale=","doc":"Current locale. The next and ongoing translations will be made with this locale, if not passed explicitly.\n\n```\nI18n.locale = \"es\"\nI18n.t(\"apples\", count: 3) # => \"3 manzanas\"\n```","summary":"<p>Current locale.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | ::Nil"}],"args_string":"(locale : String?)","args_html":"(locale : String?)","location":{"filename":"src/i18n.cr","line_number":24,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L24"},"def":{"name":"locale=","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@locale = locale"}},{"id":"rescue_missing:Bool-class-method","html_id":"rescue_missing:Bool-class-method","name":"rescue_missing","doc":"Whether to rescue `Backend::TranslationNotFoundError` when a translation is missing (defaults to *true*).\n\n```\nI18n.translate(\"unknown.key\") # => \"MISSING: en.unknown.key\"\n```","summary":"<p>Whether to rescue <code><a href=\"I18n/Backend/TranslationNotFoundError.html\">Backend::TranslationNotFoundError</a></code> when a translation is missing (defaults to <em>true</em>).</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/i18n.cr","line_number":34,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L34"},"def":{"name":"rescue_missing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@@rescue_missing"}},{"id":"rescue_missing=(rescue_missing:Bool)-class-method","html_id":"rescue_missing=(rescue_missing:Bool)-class-method","name":"rescue_missing=","doc":"Whether to rescue `Backend::TranslationNotFoundError` when a translation is missing (defaults to *true*).\n\n```\nI18n.translate(\"unknown.key\") # => \"MISSING: en.unknown.key\"\n```","summary":"<p>Whether to rescue <code><a href=\"I18n/Backend/TranslationNotFoundError.html\">Backend::TranslationNotFoundError</a></code> when a translation is missing (defaults to <em>true</em>).</p>","abstract":false,"args":[{"name":"rescue_missing","doc":null,"default_value":"","external_name":"rescue_missing","restriction":"Bool"}],"args_string":"(rescue_missing : Bool)","args_html":"(rescue_missing : Bool)","location":{"filename":"src/i18n.cr","line_number":34,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L34"},"def":{"name":"rescue_missing=","args":[{"name":"rescue_missing","doc":null,"default_value":"","external_name":"rescue_missing","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@rescue_missing = rescue_missing"}}],"constructors":[],"instance_methods":[{"id":"t(key:String,*a,**n)-instance-method","html_id":"t(key:String,*a,**n)-instance-method","name":"t","doc":"A convenient overloader, keys are passed as a String with dot delimeters.\n\n```\nI18n.translate(\"hello.world\")            # => \"Hello world!\"\nI18n.translate(\"apples\", \"es\", count: 3) # => \"3 manzanas\"\n```","summary":"<p>A convenient overloader, keys are passed as a String with dot delimeters.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"args_string":"(key : String, *a, **n)","args_html":"(key : String, *a, **n)","location":{"filename":"src/i18n.cr","line_number":66,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L66"},"def":{"name":"t","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"double_splat":{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"translate(key, *a, **n)"}},{"id":"translate(keys:Array(String),locale:String?=locale||default_locale,count:Int32?=nil):String-instance-method","html_id":"translate(keys:Array(String),locale:String?=locale||default_locale,count:Int32?=nil):String-instance-method","name":"translate","doc":"Translates a value in a *locale* found by *keys*. Can pass *count* value to translate in plural form.\n\nIf *locale* not given, uses `#locale` or `#default_locale`.\n\n```\nI18n.translate([\"hello\", \"world\"])         # => \"Hello world!\"\nI18n.translate([\"apples\"], \"es\", count: 3) # => \"3 manzanas\"\n```","summary":"<p>Translates a value in a <em>locale</em> found by <em>keys</em>.</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"locale || default_locale","external_name":"locale","restriction":"String | ::Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int32 | ::Nil"}],"args_string":"(keys : Array(String), locale : String? = locale || default_locale, count : Int32? = <span class=\"n\">nil</span>) : String","args_html":"(keys : Array(String), locale : String? = locale || default_locale, count : Int32? = <span class=\"n\">nil</span>) : String","location":{"filename":"src/i18n.cr","line_number":44,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L44"},"def":{"name":"translate","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"locale || default_locale","external_name":"locale","restriction":"String | ::Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if backend\nelse\n  raise(BackendNotSetError.new)\nend\nbegin\n  backend.not_nil!.translate(keys.dup, locale, count)\nrescue ex : Backend::TranslationNotFoundError\n  if rescue_missing\n  else\n    raise(ex)\n  end\n  \"MISSING: #{locale}.#{keys.join(\".\")}\"\nend\n"}},{"id":"translate(key:String,*a,**n)-instance-method","html_id":"translate(key:String,*a,**n)-instance-method","name":"translate","doc":"A convenient overloader, keys are passed as a String with dot delimeters.\n\n```\nI18n.translate(\"hello.world\")            # => \"Hello world!\"\nI18n.translate(\"apples\", \"es\", count: 3) # => \"3 manzanas\"\n```","summary":"<p>A convenient overloader, keys are passed as a String with dot delimeters.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"args_string":"(key : String, *a, **n)","args_html":"(key : String, *a, **n)","location":{"filename":"src/i18n.cr","line_number":61,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L61"},"def":{"name":"translate","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""}],"double_splat":{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"translate(key.split(\".\"), *a, **n)"}}],"macros":[],"types":[{"html_id":"i18n/I18n/Backend","path":"I18n/Backend.html","kind":"class","full_name":"I18n::Backend","name":"Backend","abstract":true,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backend.cr","line_number":14,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L14"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"i18n/I18n/Backends/Hash","kind":"class","full_name":"I18n::Backends::Hash","name":"Hash"},{"html_id":"i18n/I18n/Backends/JSON","kind":"class","full_name":"I18n::Backends::JSON","name":"JSON"},{"html_id":"i18n/I18n/Backends/YAML","kind":"class","full_name":"I18n::Backends::YAML","name":"YAML"}],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"Backend is a storage for translations. All translations are stored in `#data`.\n\n```\nbackend = I18n::Backends::YAML.new\nbackend.load_paths << Dir.current + \"/locales\"\nbackend.load\nbackend.translate([\"hello\", \"world\"], \"en\") # => \"Hello world!\"\n```","summary":"<p>Backend is a storage for translations.</p>","class_methods":[{"id":"quantity_key_procs:Hash(String,QuantityKeyProc)-class-method","html_id":"quantity_key_procs:Hash(String,QuantityKeyProc)-class-method","name":"quantity_key_procs","doc":"A list of `QuantityKeyProc`s associated with their locales.\n\nDefaults with `\"en\"` key:\n\n```\n\"en\" => QuantityKeyProc.new do |count|\n  if count == 0\n    \"zero\"\n  elsif count == 1\n    \"one\"\n  else\n    \"other\"\n  end\nend\n```\n\nExtend it with your own locales if you need:\n\n```\nI18n::Backend.quantity_key_procs.merge!({\"ru\" => QuantityKeyProc.new { |count| your_code }})\n```","summary":"<p>A list of <code><a href=\"../I18n/Backend/QuantityKeyProc.html\">QuantityKeyProc</a></code>s associated with their locales.</p>","abstract":false,"args":[],"args_string":" : Hash(String, QuantityKeyProc)","args_html":" : <a href=\"../Hash.html\">Hash</a>(String, <a href=\"../I18n/Backend/QuantityKeyProc.html\">QuantityKeyProc</a>)","location":{"filename":"src/i18n/backend.cr","line_number":38,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L38"},"def":{"name":"quantity_key_procs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, QuantityKeyProc)","visibility":"Public","body":"@@quantity_key_procs"}}],"constructors":[],"instance_methods":[{"id":"data:JSON::Any|YAML::Any|Nil-instance-method","html_id":"data:JSON::Any|YAML::Any|Nil-instance-method","name":"data","doc":"Storage for translations","summary":"<p>Storage for translations</p>","abstract":false,"args":[],"args_string":" : JSON::Any | YAML::Any | Nil","args_html":" : <a href=\"../JSON/Any.html\">JSON::Any</a> | <a href=\"../YAML/Any.html\">YAML::Any</a> | Nil","location":{"filename":"src/i18n/backend.cr","line_number":51,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L51"},"def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::Any | YAML::Any | Nil","visibility":"Public","body":"@data"}},{"id":"load-instance-method","html_id":"load-instance-method","name":"load","doc":"Loads data from `load_paths`.","summary":"<p>Loads data from <code><a href=\"../I18n/Backend.html#load_paths:Array(String)-instance-method\">#load_paths</a></code>.</p>","abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/i18n/backend.cr","line_number":61,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L61"},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"load_paths:Array(String)-instance-method","html_id":"load_paths:Array(String)-instance-method","name":"load_paths","doc":"Where to load locale files from.\n\n```\nbackend.load_paths << Dir.current + \"/locales\"\n```","summary":"<p>Where to load locale files from.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/i18n/backend.cr","line_number":58,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L58"},"def":{"name":"load_paths","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@load_paths"}},{"id":"translate(keys:Array(String),locale:String,count:Int32?=nil)-instance-method","html_id":"translate(keys:Array(String),locale:String,count:Int32?=nil)-instance-method","name":"translate","doc":"Find a translation by *keys* and *locale*.\n\n*locale* is prepended to the list of keys when searching for a translation.\n\n```\n# Searches for \"en => hello => world\"\nbackend.translate([\"hello\", \"world\"], \"en\") # => \"Hello world!\"\n\n# Searches for \"en => apples => other\"\nbackend.translate([\"apples\"], \"en\", count: 3) # => \"3 apples\"\n```","summary":"<p>Find a translation by <em>keys</em> and <em>locale</em>.</p>","abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int32 | ::Nil"}],"args_string":"(keys : Array(String), locale : String, count : Int32? = <span class=\"n\">nil</span>)","args_html":"(keys : Array(String), locale : String, count : Int32? = <span class=\"n\">nil</span>)","location":{"filename":"src/i18n/backend.cr","line_number":74,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L74"},"def":{"name":"translate","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Int32 | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data\nelse\n  raise(DataNotLoadedError.new)\nend\nif count.nil?\nelse\n  keys << (quantity_key(count, locale))\nend\nkeys.unshift(locale)\ntranslation = (data.not_nil!.dig?(keys.dup)).try(&.to_s)\nif translation\nelse\n  raise(TranslationNotFoundError.new(keys, locale))\nend\nif count.nil?\n  return translation\nelse\n  return translation % {count: count}\nend\n"}}],"macros":[],"types":[{"html_id":"i18n/I18n/Backend/DataNotLoadedError","path":"I18n/Backend/DataNotLoadedError.html","kind":"class","full_name":"I18n::Backend::DataNotLoadedError","name":"DataNotLoadedError","abstract":false,"superclass":{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backend.cr","line_number":95,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L95"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"doc":"Raised when `Backend.data` is nil.","summary":"<p>Raised when <code><a href=\"../../I18n/Backend.html#data:JSON::Any%7CYAML::Any%7CNil-instance-method\">Backend.data</a></code> is nil.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/Backend/QuantityKeyProc","path":"I18n/Backend/QuantityKeyProc.html","kind":"alias","full_name":"I18n::Backend::QuantityKeyProc","name":"QuantityKeyProc","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/backend.cr","line_number":15,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L15"}],"repository_name":"i18n","program":false,"enum":false,"alias":true,"aliased":"Proc(Int32, String)","aliased_html":"Int32 -> String","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/Backend/TranslationNotFoundError","path":"I18n/Backend/TranslationNotFoundError.html","kind":"class","full_name":"I18n::Backend::TranslationNotFoundError","name":"TranslationNotFoundError","abstract":false,"superclass":{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backend.cr","line_number":99,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L99"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"doc":"Raised when a translation is not found.","summary":"<p>Raised when a translation is not found.</p>","class_methods":[],"constructors":[{"id":"new(keys:Array(String),locale:String)-class-method","html_id":"new(keys:Array(String),locale:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"}],"args_string":"(keys : Array(String), locale : String)","args_html":"(keys : Array(String), locale : String)","location":{"filename":"src/i18n/backend.cr","line_number":100,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backend.cr#L100"},"def":{"name":"new","args":[{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":"Array(String)"},{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(keys, locale)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"i18n/I18n/BackendNotSetError","path":"I18n/BackendNotSetError.html","kind":"class","full_name":"I18n::BackendNotSetError","name":"BackendNotSetError","abstract":false,"superclass":{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n.cr","line_number":71,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n.cr#L71"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"Raised when `I18n.backend` is nil.","summary":"<p>Raised when <code><a href=\"../I18n.html#backend:Backend?-class-method\">I18n.backend</a></code> is nil.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/Backends","path":"I18n/Backends.html","kind":"module","full_name":"I18n::Backends","name":"Backends","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/backends/hash.cr","line_number":4,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/hash.cr#L4"},{"filename":"src/i18n/backends/json.cr","line_number":4,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/json.cr#L4"},{"filename":"src/i18n/backends/yaml.cr","line_number":4,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/yaml.cr#L4"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Backends/Hash","path":"I18n/Backends/Hash.html","kind":"class","full_name":"I18n::Backends::Hash","name":"Hash","abstract":false,"superclass":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"ancestors":[{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backends/hash.cr","line_number":9,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/hash.cr#L9"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backends","kind":"module","full_name":"I18n::Backends","name":"Backends"},"doc":"Plain `Hash` backend.\n\nIt **MUST** be populated with data explicitly upon creation.\n","summary":"<p>Plain <code><a href=\"../../I18n/Backends/Hash.html\">Hash</a></code> backend.</p>","class_methods":[],"constructors":[{"id":"new(data)-class-method","html_id":"new(data)-class-method","name":"new","doc":"Initializes a backend and loads it with *data* (it **MUST** be a `Hash`).\n\n```\nbackend = I18n::Backends::Hash.new.tap { |b| b.load({\"foo\" => \"bar\"}) }\n```\n\nTODO: Find a way to implement this without external parsers.","summary":"<p>Initializes a backend and loads it with <em>data</em> (it <strong>MUST</strong> be a <code><a href=\"../../I18n/Backends/Hash.html\">Hash</a></code>).</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"args_string":"(data)","args_html":"(data)","location":{"filename":"src/i18n/backends/hash.cr","line_number":22,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/hash.cr#L22"},"def":{"name":"new","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(data)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/Backends/JSON","path":"I18n/Backends/JSON.html","kind":"class","full_name":"I18n::Backends::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"ancestors":[{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backends/json.cr","line_number":5,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/json.cr#L5"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backends","kind":"module","full_name":"I18n::Backends","name":"Backends"},"doc":null,"summary":null,"class_methods":[{"id":"merge_json(string)-class-method","html_id":"merge_json(string)-class-method","name":"merge_json","doc":"Concatenates multiple JSONs into one in a raw *string*\n\n```\nstring = <<-END\n{\n  \"foo\": \"bar\"\n}\n\n{\n  \"bar\": \"baz\"\n}\nEND\n\nmerge_json(string)\n# {\n#  \"foo\": \"bar\",\n#  \"bar\": \"baz\"\n# }\n```","summary":"<p>Concatenates multiple JSONs into one in a raw <em>string</em></p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"args_string":"(string)","args_html":"(string)","location":{"filename":"src/i18n/backends/json.cr","line_number":38,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/json.cr#L38"},"def":{"name":"merge_json","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"string.gsub(/}\\n*{\\n/, \",\\n\")"}}],"constructors":[],"instance_methods":[{"id":"load-instance-method","html_id":"load-instance-method","name":"load","doc":"See `Backend.load`.","summary":"<p>See <code><a href=\"../../I18n/Backend.html#load-instance-method\">Backend.load</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/i18n/backends/json.cr","line_number":7,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/json.cr#L7"},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"contents = \"\"\nload_paths.each do |path|\n  Dir.glob(path + \"/*.json\") do |filename|\n    contents = contents + (File.read(filename))\n  end\nend\n@data = ::JSON.parse(self.class.merge_json(contents))\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Backends/YAML","path":"I18n/Backends/YAML.html","kind":"class","full_name":"I18n::Backends::YAML","name":"YAML","abstract":false,"superclass":{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},"ancestors":[{"html_id":"i18n/I18n/Backend","kind":"class","full_name":"I18n::Backend","name":"Backend"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/backends/yaml.cr","line_number":5,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/yaml.cr#L5"}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Backends","kind":"module","full_name":"I18n::Backends","name":"Backends"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"load-instance-method","html_id":"load-instance-method","name":"load","doc":"See `Backend.load`.","summary":"<p>See <code><a href=\"../../I18n/Backend.html#load-instance-method\">Backend.load</a></code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/i18n/backends/yaml.cr","line_number":7,"url":"https://github.com/vladfaust/i18n.cr/blob/7f80fe9d39dbf932d9e5fb9b711e8dfb51b6801d/src/i18n/backends/yaml.cr#L7"},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"contents = \"\"\nload_paths.each do |path|\n  Dir.glob(path + \"/*.yml\", path + \"/*.yaml\") do |filename|\n    contents = contents + (File.read(filename))\n  end\nend\n@data = ::YAML.parse(contents)\n"}}],"macros":[],"types":[]}]}]}]}})